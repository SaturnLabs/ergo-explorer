{"version":3,"sources":["constants/struct.types.ts","utils/fetchStruct.ts","components/common/paginate-simple/paginate-simple.component.tsx","components/common/limit-selector/limit-selector.component.tsx","services/issuedToken.api.service.ts","actions/issuedTokens.actions.ts","selectors/issuedTokens.ts","../node_modules/react-truncate/lib/Truncate.js","components/collapse-text/collapse-text.component.tsx","components/issued-tokens-table/issued-tokens-table.component.tsx","pages/issued-tokens/issued-tokens.component.tsx"],"names":["GET_ALL_ISSUED_TOKENS_STRUCT","GET_TOTAL_ISSUED_TOKENS_STRUCT","GET_ISSUED_TOKENS_BY_ID_STRUCT","GET_UNCONFIRMED_TRANSACTIONS_STRUCT","GET_UNCONFIRMED_TRANSACTION_STRUCT","GET_ORACLE_POOL_DATA_STRUCT","GET_ADDRESSES_BALANCES_STRUCT","defaultOpts","transformResponse","d","dispatch","fetchStruct","structId","axiosParams","opts","startStructFetch","axios","request","then","res","data","result","stopStructFetch","Promise","resolve","error","errors","Error","reject","catch","PaginateSimpleComponent","props","pageCount","Math","ceil","this","total","limit","className","forcePage","disabled","to","getPageUrl","id","values","current","React","Component","LimitSelectorComponent","label","items","map","item","index","selectorItemClassNames","classNames","selected","getLimitLink","PureComponent","IssuedTokensService","environment","apiUrl","offset","method","url","params","tokenId","IssuedTokensActions","getTokens","getAllIssuedTokens","payload","type","GET_TOKENS_SUCCESS","getAllIssuedTokensStructSelector","state","getStruct","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","Truncate","_Component","_ref","_len","args","Array","_key","_this","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","propTypes","PropTypes","oneOfType","oneOf","number","bool","func","defaultProps","CollapseText","useState","isExpanded","setIsExpanded","isTruncated","setIsTruncated","toggler","href","onClick","e","preventDefault","IssuedTokensTableComponent","tokens","renderTable","colSpan","token","readOnly","name","format","integerSeparator","emissionAmount","decimals","description","IssuedTokens","getParams","reloadTokens","JSON","stringify","title","isFetching","page","queryString","parse","history","location","search","forEach","parseInt","IssuedTokensComponent","connect","bindActionCreators"],"mappings":"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","file":"static/js/13.ab03d73f.chunk.js","sourcesContent":["export const SEARCH_TOKEN_BY_ID_STRUCT = 'assets/tokenid/issuingBox';\n\nexport const UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentSellOrders';\n\nexport const UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentBuyOrders';\n\nexport const GET_ALL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes';\n\nexport const GET_TOTAL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes/total';\n\nexport const GET_ISSUED_TOKENS_BY_ID_STRUCT = 'assets/id:/issuingBoxes';\n\nexport const GET_UNCONFIRMED_TRANSACTIONS_STRUCT = '/transactions/unconfirmed';\n\nexport const GET_UNCONFIRMED_TRANSACTION_STRUCT =\n  '/transactions/unconfirmed/:id';\n\nexport const GET_ORACLE_POOL_DATA_STRUCT = 'oracle/frontendData';\n\nexport const GET_ADDRESSES_BALANCES_STRUCT = 'addresses/balances';\n","import { Action, Dispatch } from 'redux';\nimport { stopStructFetch, startStructFetch } from 'redux-struct';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nexport interface Struct<T, E> {\n  data?: T;\n  isFetching: boolean;\n  errors?: E;\n}\n\nexport interface StructFlowOpts<T> {\n  transformResponse?(d: T): T | Promise<T>;\n  dispatch: Dispatch<Action>;\n}\n\nconst defaultOpts: StructFlowOpts<any> = {\n  transformResponse: (d) => d,\n  dispatch: (d) => d,\n};\n\nexport const fetchStruct = <T>(\n  structId: string,\n  axiosParams: AxiosRequestConfig,\n  opts: StructFlowOpts<T> = defaultOpts\n) => {\n  const { dispatch, transformResponse } = opts;\n  dispatch(startStructFetch(structId));\n\n  return axios\n    .request({ ...axiosParams })\n    .then((res: AxiosResponse<T>) => res.data)\n    .then(transformResponse)\n    .then((result: T) => {\n      if (!result) {\n        dispatch(stopStructFetch(structId, result));\n\n        return Promise.resolve(result);\n      }\n\n      const error = (result as any).errors || (result as any).error;\n\n      if (error) {\n        dispatch(stopStructFetch(structId, new Error(error)));\n\n        return Promise.reject(new Error(error));\n      }\n\n      dispatch(stopStructFetch(structId, result));\n\n      return Promise.resolve(result);\n    })\n    .catch((error: Error) => {\n      dispatch(stopStructFetch(structId, error));\n\n      return Promise.reject(error);\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './paginate-simple.scss';\n\nimport { ArrowIcon, DoubleArrowIcon } from '../icons/common.icons';\n\ninterface IPaginateSimpleProps {\n  total: number;\n  limit: number;\n  forcePage: number;\n  getPageUrl: (page: number) => string;\n}\n\nexport class PaginateSimpleComponent extends React.Component<IPaginateSimpleProps> {\n  constructor(props: IPaginateSimpleProps) {\n    super(props);\n  }\n\n  render(): JSX.Element | null {\n    const pageCount = Math.ceil(this.props.total / this.props.limit);\n\n    if (!pageCount) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-paginate-simple\">\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            to={this.props.getPageUrl(0)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage - 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        <span className=\"bi-paginate-simple__status\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page-of\"\n            values={{ current: this.props.forcePage + 1, total: pageCount }}\n          />\n        </span>\n\n        <span className=\"bi-paginate-simple__status bi-paginate-simple__status--mobile\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page\"\n            values={{ current: this.props.forcePage + 1 }}\n          />\n        </span>\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage + 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(pageCount - 1)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './limit-selector.scss';\n\ninterface ILimitSelectorProps {\n  label: string | JSX.Element;\n  items: number[];\n  selected: number;\n  getLimitLink: (limit: number) => string;\n}\n\nexport class LimitSelectorComponent extends React.PureComponent<ILimitSelectorProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-limit-selector\">\n        <span className=\"bi-limit-selector__label\">{this.props.label}</span>\n\n        {this.props.items.map((item, index) => {\n          const selectorItemClassNames = classNames({\n            'bi-btn': true,\n            'bi-btn--flat': true,\n            'bi-limit-selector__item': true,\n            'bi-limit-selector__item--selected': item === this.props.selected,\n          });\n\n          return (\n            <Link\n              className={selectorItemClassNames}\n              key={index}\n              to={this.props.getLimitLink(item)}\n            >\n              {item}\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import environment from '../config/environment';\nimport { fetchStruct } from '../utils/fetchStruct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n  GET_ISSUED_TOKENS_BY_ID_STRUCT,\n} from '../constants/struct.types';\n\nexport class IssuedTokensService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}`;\n  }\n\n  static getAllIssuedTokens(dispatch: any, { limit, offset }: any): any {\n    return fetchStruct(\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `https://api.ergoplatform.com/api/v1/tokens`,\n        params: {\n          limit,\n          offset,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getTotalIssuedTokens(dispatch: any, { limit }: any): any {\n    return fetchStruct(\n      GET_TOTAL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `https://api.ergoplatform.com/api/v1/tokens`,\n        params: {\n          limit,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getIssuedTokensById(dispatch: any, tokenId: string): any {\n    return fetchStruct(\n      GET_ISSUED_TOKENS_BY_ID_STRUCT,\n      {\n        method: 'get',\n        url: `${IssuedTokensService.apiUrl}/tokens/${tokenId}/issuingBox`,\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\nimport { IssuedTokensService } from '../services/issuedToken.api.service';\nimport { GET_TOKENS_SUCCESS } from '../constants/tokens.types';\n\nexport interface IssuedTokensActions extends ActionCreatorsMapObject {\n  getTokens: (params: any) => any;\n}\n\nexport const IssuedTokensActions: IssuedTokensActions = {\n  getTokens(params: any) {\n    return (dispatch: any) =>\n      IssuedTokensService.getAllIssuedTokens(dispatch, params).then(\n        (data: any) => {\n          dispatch({\n            payload: {\n              offset: params.offset || 0,\n            },\n            type: GET_TOKENS_SUCCESS,\n          });\n        }\n      );\n  },\n};\n","import { getStruct } from 'redux-struct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n} from '../constants/struct.types';\n\nexport const getAllIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_ALL_ISSUED_TOKENS_STRUCT)(state);\n\nexport const getTotalIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_TOTAL_ISSUED_TOKENS_STRUCT)(state);\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactTruncate from 'react-truncate';\n\ninterface IProps {\n  children: React.ReactChildren;\n  lines: number;\n}\n\nexport const CollapseText = ({ children, lines }: IProps) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const toggler = (\n    <>\n      {!isExpanded && '...'}\n      <br />\n      <a\n        href=\"#!\"\n        onClick={(e: any) => {\n          e.preventDefault();\n          setIsExpanded(!isExpanded);\n        }}\n      >\n        <FormattedMessage\n          id={isExpanded ? 'common.token.showLess' : 'common.token.showMore'}\n        />\n      </a>\n    </>\n  );\n  return (\n    <>\n      <ReactTruncate\n        lines={!isExpanded && lines}\n        ellipsis={toggler}\n        onTruncate={setIsTruncated}\n      >\n        {children}\n      </ReactTruncate>\n      {!isTruncated && isExpanded && toggler}\n    </>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport format from 'format-number';\nimport { CollapseText } from 'src/components/collapse-text/collapse-text.component';\n\nimport './issued-tokens-table.scss';\n\ninterface IssuedTokensTableProps {\n  tokens: any[];\n  isFetching: boolean;\n}\n\nexport class IssuedTokensTableComponent extends React.Component<IssuedTokensTableProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-blocks-table\">\n        {!this.props.tokens ? null : this.renderTable()}\n      </div>\n    );\n  }\n\n  private renderTable(): JSX.Element {\n    return (\n      <table className=\"bi-blocks-table__body bi-table\">\n        <thead className=\"bi-blocks-table-header\">\n          <tr className=\"bi-blocks-table-header bi-blocks-table__row bi-table__row\">\n            <th className=\"bi-blocks-table__cell bi-table__cell\" colSpan={1}>\n              <FormattedMessage id=\"common.token.id\" />\n            </th>\n\n            <th className=\"bi-blocks-table__cell bi-table__cell\" colSpan={2}>\n              <FormattedMessage id=\"common.token.name\" />\n            </th>\n\n            <th className=\"bi-blocks-table__cell bi-table__cell\" colSpan={1}>\n              <FormattedMessage id=\"common.token.amount\" />\n            </th>\n\n            <th className=\"bi-blocks-table__cell bi-table__cell\" colSpan={1}>\n              <FormattedMessage id=\"common.token.decimals\" />\n            </th>\n\n            <th className=\"bi-blocks-table__cell bi-table__cell\" colSpan={3}>\n              <FormattedMessage id=\"common.token.description\" />\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {this.props.tokens.map((token) => {\n            return (\n              <tr className=\"bi-blocks-table__row bi-table__row\" key={token.id}>\n                <td\n                  className=\"bi-blocks-table__cell bi-table__cell bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.id\" />\n                  </div>\n\n                  <input\n                    className=\"bi-tokens-table__input\"\n                    type=\"text\"\n                    value={token.id}\n                    readOnly\n                  />\n                </td>\n\n                <td\n                  className=\"bi-blocks-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={2}\n                >\n                  <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.name\" />\n                  </div>\n\n                  {token.name}\n                </td>\n\n                <td\n                  className=\"bi-blocks-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.amount\" />\n                  </div>\n\n                  <input\n                    className=\"bi-tokens-table__input\"\n                    type=\"text\"\n                    value={format({ integerSeparator: ' ' })(\n                      token.emissionAmount\n                    )}\n                    readOnly\n                  />\n                </td>\n\n                <td\n                  className=\"bi-blocks-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.decimals\" />\n                  </div>\n\n                  {token.decimals}\n                </td>\n\n                <td\n                  className=\"bi-blocks-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={3}\n                >\n                  <div className=\"bi-blocks-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.description\" />\n                  </div>\n\n                  <div>\n                    <CollapseText lines={2}>{token.description}</CollapseText>\n                  </div>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport { AppState } from '../../store/app.store';\n\nimport { IGetBlocksParams } from '../../services/block.api.service';\n\nimport { LimitSelectorComponent } from '../../components/common/limit-selector/limit-selector.component';\nimport { PaginateSimpleComponent } from '../../components/common/paginate-simple/paginate-simple.component';\nimport { IssuedTokensActions } from '../../actions/issuedTokens.actions';\nimport { getAllIssuedTokensStructSelector } from '../../selectors/issuedTokens';\nimport { IssuedTokensTableComponent } from '../../components/issued-tokens-table/issued-tokens-table.component';\n\nimport './issued-tokens.scss';\n\ntype IDataProps = AppState &\n  IssuedTokensActions &\n  RouteComponentProps<{}> & {\n    tokens: any;\n    offset: number;\n  };\n\nclass IssuedTokens extends React.PureComponent<IDataProps> {\n  params: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.getPageUrl = this.getPageUrl.bind(this);\n    this.getLimitLink = this.getLimitLink.bind(this);\n\n    this.params = this.getParams();\n  }\n\n  componentDidMount(): void {\n    this.reloadTokens(this.params);\n  }\n\n  UNSAFE_componentWillReceiveProps(props: IDataProps): void {\n    const params = this.getParams();\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n\n      this.reloadTokens(this.params);\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-data g-flex-column g-flex-column__item-fixed\">\n        <FormattedMessage id=\"common.pages.issued-tokens.title\">\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-data__header g-flex-column__item-fixed g-flex\">\n          <div className=\"bi-data__title g-flex__item\">\n            <FormattedMessage id=\"components.issued-tokens.title\" />\n          </div>\n        </div>\n\n        {this.props.tokens.isFetching && (\n          <p className=\"base-text\">Fetching Data...</p>\n        )}\n\n        {this.props.tokens.data && this.props.tokens.data.total === 0 && (\n          <div className=\"bi-data__body g-flex-column__item-fixed\">\n            <FormattedMessage id=\"components.data.wrong-query\" />\n          </div>\n        )}\n\n        {!this.props.tokens.isFetching &&\n          this.props.tokens.data !== null &&\n          this.props.tokens.data.items.length > 0 && (\n            <div className=\"bi-data__body g-flex-column__item-fixed\">\n              <IssuedTokensTableComponent\n                tokens={this.props.tokens.data.items}\n                isFetching={this.props.tokens.isFetching}\n              />\n            </div>\n          )}\n\n        {this.props.tokens.data !== null &&\n          this.props.tokens.data.items.length > 0 && (\n            <div className=\"bi-data__footer g-flex-column__item-fixed g-flex\">\n              <div className=\"g-flex__item-fixed\">\n                <LimitSelectorComponent\n                  items={[30, 60, 120]}\n                  selected={this.params.limit}\n                  label={<FormattedMessage id=\"components.data.show\" />}\n                  getLimitLink={this.getLimitLink}\n                />\n              </div>\n\n              <div className=\"g-flex__item-fixed\">\n                <PaginateSimpleComponent\n                  total={this.props.tokens.data.total}\n                  limit={this.params.limit}\n                  getPageUrl={this.getPageUrl}\n                  forcePage={Math.floor(this.props.offset / this.params.limit)}\n                />\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n\n  private getPageUrl(page: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.offset = page * this.params.limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private getLimitLink(limit: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.limit = limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private reloadTokens(params: IGetBlocksParams): void {\n    params = {\n      ...this.params,\n      ...params,\n      limit: params.limit || 30,\n      offset: params.offset || 0,\n    };\n\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null) {\n        delete params[key];\n      }\n    });\n\n    this.props.getTokens(params);\n\n    if (params.offset === 0) {\n      delete params.offset;\n    }\n\n    if (params.limit === 30) {\n      delete params.limit;\n    }\n\n    this.props.history.push(`/issued-tokens?${queryString.stringify(params)}`);\n  }\n\n  private getParams(): any {\n    let { offset, limit }: any = queryString.parse(\n      this.props.history.location.search\n    );\n\n    offset = parseInt(offset, 10);\n    limit = parseInt(limit, 10) || 30;\n\n    return {\n      limit,\n      offset: offset || 0,\n    };\n  }\n}\n\nconst mapStateToProps = (state: any): any => ({\n  tokens: getAllIssuedTokensStructSelector(state),\n  offset: state.tokens.offset,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => {\n  return bindActionCreators({ ...IssuedTokensActions }, dispatch);\n};\n\nconst IssuedTokensComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IssuedTokens);\n\nexport default IssuedTokensComponent;\n"],"sourceRoot":""}