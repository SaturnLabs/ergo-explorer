{"version":3,"sources":["constants/timespan.constant.ts","services/chart.api.service.ts","actions/chart.actions.ts","components/charts/chart-tooltip/chart-tooltip.component.tsx","components/charts/area-chart/area-chart.component.tsx","components/charts/chart-actions/chart-actions.component.tsx","components/charts/pie-chart/pie-chart.component.tsx","components/charts/timespan/timespan.component.tsx","pages/chart/chart.component.tsx"],"names":["TIMESPAN","ChartApiService","chartType","options","timespan","ALLTIME","axios","get","environment","apiUrl","params","DAYS_30","then","response","data","Promise","reject","ChartActions","getChart","dispatch","type","GET_CHART","payload","GET_CHART_SUCCESS","ChartTooltipComponent","date","dayjs","this","props","label","format","value","transformValue","isScale","originalValue","convertInfoItemValue","className","React","PureComponent","VERY_SMALL_NUMBER","AreaChartComponent","formatLabel","bind","formatXLabel","formatTooltip","renderTooltip","max","Math","ceil","apply","map","item","maxDomain","pow","toString","length","width","height","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","compact","stroke","vertical","strokeDasharray","fill","dataKey","tick","fontSize","tickLine","tickCount","tickMargin","tickFormatter","minTickGap","hide","domain","scale","content","yAxisId","fillOpacity","animationDuration","isAnimationActive","formatNumberMetricPrefix","fractionDigits","ChartActionsComponent","to","getChartActionUrl","file","getCSVData","JSON","stringify","timestamp","join","Component","COLORS","PieChartComponent","state","activeIndex","renderActiveShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","r","toFixed","onPieEnter","index","setState","sort","a","b","activeShape","onMouseEnter","entry","labels","TimespanComponent","Object","keys","span","btnClassNames","classNames","selected","getTimespanUrl","Chart","getParams","match","queryString","parse","location","search","iframe","chartClassNames","classnames","title","renderBody","renderChart","renderControls","formatData","slice","history","validTimespan","find","key","pathname","param","ChartComponent","connect","chart","bindActionCreators"],"mappings":"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","file":"static/js/12.084573db.chunk.js","sourcesContent":["export enum TIMESPAN {\n  DAYS_30 = '30days',\n  DAYS_60 = '60days',\n  DAYS_180 = '180days',\n  YEAR_1 = '1year',\n  YEAR_2 = '2years',\n  ALLTIME = 'alltime',\n}\n","import axios, { AxiosResponse } from 'axios';\n\nimport environment from '../config/environment';\n\nimport { IChartParams } from '../actions/chart.actions';\n\nimport { TIMESPAN } from '../constants/timespan.constant';\n\nexport class ChartApiService {\n  static getChart(chartType: string, options: IChartParams = {}): any {\n    const timespan =\n      options.timespan === TIMESPAN.ALLTIME ? 'all' : options.timespan;\n\n    return axios\n      .get(`${environment.apiUrl}/charts/${chartType}`, {\n        params: {\n          timespan: timespan || TIMESPAN.DAYS_30,\n        },\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Block api service. Request: ${environment.apiUrl}/charts/${chartType}.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n}\n","import { Action, ActionCreatorsMapObject, Dispatch } from 'redux';\n\nimport { GET_CHART, GET_CHART_SUCCESS } from '../constants/chart.types';\nimport { TIMESPAN } from '../constants/timespan.constant';\nimport { ChartApiService } from '../services/chart.api.service';\n\nexport interface ChartActions extends ActionCreatorsMapObject {\n  getChart: (chartType: string, options?: IChartParams) => any;\n}\n\nexport interface IChartParams {\n  timespan?: TIMESPAN;\n}\n\nexport const ChartActions: ChartActions = {\n  getChart(chartType: string, options: IChartParams = {}): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_CHART,\n      });\n\n      return ChartApiService.getChart(chartType, options).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_CHART_SUCCESS,\n        });\n      });\n    };\n  },\n};\n","import dayjs from 'dayjs';\nimport React from 'react';\n\nimport { convertInfoItemValue } from '../../../utils/convertInfoItemvalue';\n\nimport './chart-tooltip.scss';\ninterface ChartProps {\n  type: string;\n  payload: any[];\n  label: string;\n  isScale: boolean;\n}\nexport class ChartTooltipComponent extends React.PureComponent<ChartProps> {\n  render(): JSX.Element {\n    const date = dayjs(this.props.label).format('DD.MM.YYYY');\n\n    let value = null;\n    const payload = this.props.payload ? this.props.payload[0] : null;\n\n    if (payload) {\n      const type = payload.payload.type || 'chart';\n      const transformValue = this.props.isScale\n        ? payload.payload.originalValue\n        : this.props.payload[0].value;\n\n      value = convertInfoItemValue(type, transformValue);\n    }\n\n    return (\n      <div className=\"bi-chart-tooltip\">\n        <div className=\"bi-chart-tooltip__label\">{date}</div>\n        {value}\n      </div>\n    );\n  }\n}\n","import dayjs from 'dayjs';\nimport React from 'react';\n\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nimport { convertInfoItemValue } from '../../../utils/convertInfoItemvalue';\nimport { formatNumberMetricPrefix } from '../../../utils/formatNumberMetricPrefix';\n\nimport { ChartTooltipComponent } from '../chart-tooltip/chart-tooltip.component';\n\ninterface IAreaChartProps {\n  data: any;\n  compact?: boolean;\n  isScale: boolean;\n}\n\nconst VERY_SMALL_NUMBER = 0.0001;\n\nexport class AreaChartComponent extends React.PureComponent<IAreaChartProps> {\n  constructor(props: any) {\n    super(props);\n\n    this.formatLabel = this.formatLabel.bind(this);\n    this.formatXLabel = this.formatXLabel.bind(this);\n    this.formatTooltip = this.formatTooltip.bind(this);\n    this.renderTooltip = this.renderTooltip.bind(this);\n  }\n\n  render(): JSX.Element {\n    let data = this.props.data;\n\n    const max = Math.ceil(\n      Math.max.apply(\n        null,\n        data.map((item: any) => item.value)\n      )\n    );\n\n    const maxDomain =\n      (Math.ceil(max / Math.pow(10, max.toString().length - 1)) + 2) *\n      Math.pow(10, max.toString().length - 1);\n\n    // Logarithmic scale doesn't support values under 0 or equal to 0\n    if (this.props.isScale) {\n      data = data.map((item: any) => {\n        return {\n          ...item,\n          originalValue: item.value,\n          value: item.value <= 0 ? VERY_SMALL_NUMBER : item.value,\n        };\n      });\n    }\n\n    return (\n      <ResponsiveContainer width={'100%'} height={'100%'}>\n        <AreaChart data={data}>\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"1\" x2=\"1\" y2=\"0\">\n              <stop offset=\"20%\" stopColor=\"#0078FF\" stopOpacity={0} />\n              <stop offset=\"80%\" stopColor=\"#0078FF\" stopOpacity={0.2} />\n            </linearGradient>\n          </defs>\n\n          {this.props.compact ? null : (\n            <CartesianGrid\n              stroke=\"#e8e8e8\"\n              vertical={false}\n              strokeDasharray=\"6 4\"\n              fill=\"#fff\"\n            />\n          )}\n\n          <XAxis\n            dataKey=\"timestamp\"\n            tick={{ fill: '#828795', fontSize: 14 }}\n            tickLine={false}\n            tickCount={100}\n            tickMargin={10}\n            tickFormatter={this.formatXLabel}\n            minTickGap={30}\n            hide={this.props.compact}\n          />\n\n          <YAxis\n            dataKey=\"value\"\n            domain={[this.props.isScale ? VERY_SMALL_NUMBER : 0, maxDomain]}\n            scale={this.props.isScale ? 'log' : 'auto'}\n            tickMargin={10}\n            tickLine={false}\n            tickCount={5}\n            minTickGap={30}\n            tick={{ fill: '#828795', fontSize: 14 }}\n            tickFormatter={this.formatLabel}\n            hide={this.props.compact}\n          />\n\n          <Tooltip content={this.renderTooltip} />\n\n          <Area\n            type=\"linear\"\n            dataKey=\"value\"\n            stroke=\"#0078FF\"\n            yAxisId={0}\n            fillOpacity={1}\n            fill={'url(#colorUv)'}\n            animationDuration={300}\n            isAnimationActive={!this.props.compact}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    );\n  }\n\n  private renderTooltip(props: any): JSX.Element {\n    return <ChartTooltipComponent {...props} isScale={this.props.isScale} />;\n  }\n\n  private formatLabel(value: number): string {\n    return formatNumberMetricPrefix(value, { fractionDigits: 0 });\n  }\n\n  private formatXLabel(value: number): string {\n    return dayjs(value).format('DD MMM YYYY');\n  }\n\n  private formatTooltip(value: any): string {\n    return convertInfoItemValue('chart', value);\n  }\n}\n","import Download from '@axetroy/react-download';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './chart-actions.scss';\n\ninterface IChartActionsProps {\n  getChartActionUrl: (action: string, value: string | number | null) => string;\n  isScale: boolean;\n  data: any;\n}\n\nexport class ChartActionsComponent extends React.Component<IChartActionsProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-chart-actions\">\n        {!this.props.isScale ? (\n          <Link\n            className=\"bi-chart-actions__action bi-btn bi-btn--flat\"\n            to={this.props.getChartActionUrl('scale', '1')}\n          >\n            <FormattedMessage id=\"components.chart-actions.logarithmic-scale\" />\n          </Link>\n        ) : (\n          <Link\n            className=\"bi-chart-actions__action bi-btn bi-btn--flat\"\n            to={this.props.getChartActionUrl('scale', null)}\n          >\n            <FormattedMessage id=\"components.chart-actions.linear-scale\" />\n          </Link>\n        )}\n\n        {this.props.data && (\n          <Download\n            file=\"data.csv\"\n            content={this.getCSVData()}\n            className=\"bi-chart-actions__action bi-btn bi-btn--flat\"\n          >\n            <FormattedMessage id=\"components.chart-actions.csv\" />\n          </Download>\n        )}\n\n        {this.props.data && (\n          <Download\n            file=\"data.json\"\n            content={JSON.stringify(this.props.data)}\n            className=\"bi-chart-actions__action bi-btn bi-btn--flat\"\n          >\n            <FormattedMessage id=\"components.chart-actions.json\" />\n          </Download>\n        )}\n      </div>\n    );\n  }\n\n  private getCSVData(): string {\n    if (!this.props.data) {\n      return '';\n    }\n\n    const data = this.props.data.map((item: any) => {\n      return [item.timestamp, item.value].join(', ');\n    });\n\n    return ['timestamp, value', ...data].join('\\r\\n');\n  }\n}\n","import React from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Sector } from 'recharts';\n\nimport './pie-chart.scss';\n\ninterface IPieChartProps {\n  data: any;\n  labels: any;\n  compact?: boolean;\n}\n\nconst COLORS = [\n  '#0088FE',\n  '#85144b',\n  '#FFBB28',\n  '#FF8042',\n  '#2ECC40',\n  '#FF4136',\n  '#001f3f',\n  '#0074D9',\n  '#FF851B',\n  '#00C49F',\n  '#F012BE',\n  '#7FDBFF',\n  '#FFDC00',\n  '#39CCCC',\n  '#3D9970',\n  '#B10DC9',\n  '#01FF70',\n];\n\nexport class PieChartComponent extends React.PureComponent<IPieChartProps> {\n  state = {\n    activeIndex: 0,\n  };\n\n  render(): JSX.Element {\n    const data = this.props.data\n      .map((item: any) => ({\n        name: item.name,\n        value: item.value,\n      }))\n      .sort((a: any, b: any) => b.y - a.y);\n\n    return (\n      <div className=\"bi-pie-chart\">\n        <div className=\"bi-pie-chart__chart\">\n          <ResponsiveContainer>\n            <PieChart>\n              <Pie\n                activeIndex={this.state.activeIndex}\n                activeShape={this.renderActiveShape}\n                data={data}\n                innerRadius={100}\n                outerRadius={140}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n                onMouseEnter={this.onPieEnter}\n              >\n                {data.map((entry: any, index: number) => (\n                  <Cell\n                    key={`cell-${entry.value}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                ))}\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n\n        <div className=\"bi-pie-chart__legend bi-pie-chart__table bi-table\">\n          <div className=\"bi-pie-chart__row bi-table__row bi-pie-chart__row--header\">\n            <div className=\"bi-pie-chart__cell bi-table__cell\">\n              {this.props.labels.name}\n            </div>\n            <div className=\"bi-pie-chart__cell bi-table__cell\">\n              {this.props.labels.value}\n            </div>\n          </div>\n\n          {this.props.data.map((item: any, index: number) => (\n            <div className=\"bi-pie-chart__row bi-table__row\" key={index}>\n              <div className=\"bi-pie-chart__cell bi-table__cell\">\n                <span>{this.props.labels.name}</span> {item.name}\n              </div>\n              <div className=\"bi-pie-chart__cell bi-table__cell\">\n                <span>{this.props.labels.value}</span> {item.value}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  renderActiveShape = (props: any) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value,\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n          stroke={fill}\n          fill=\"none\"\n        />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          textAnchor={textAnchor}\n          fill=\"#333\"\n        >{`Blocks: ${value}`}</text>\n        <text\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\n          y={ey}\n          dy={18}\n          textAnchor={textAnchor}\n          fill=\"#999\"\n        >\n          {`(Rate: ${(percent * 100).toFixed(2)}%)`}\n        </text>\n      </g>\n    );\n  };\n\n  onPieEnter = (data: any, index: number) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n}\n\nexport default PieChartComponent;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport { TIMESPAN } from '../../../constants/timespan.constant';\n\nimport './timespan.scss';\n\ninterface TimespanProps {\n  getTimespanUrl: (selectedSpan: TIMESPAN) => string;\n  selected: TIMESPAN;\n}\n\nexport class TimespanComponent extends React.Component<TimespanProps> {\n  constructor(props: TimespanProps) {\n    super(props);\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-timespan\">\n        {Object.keys(TIMESPAN).map((span) => {\n          const btnClassNames = classNames({\n            'bi-btn': true,\n            'bi-btn--flat': true,\n            'bi-timespan__span': true,\n            'bi-timespan__span--active': this.props.selected === TIMESPAN[span],\n          });\n\n          return (\n            <Link\n              className={btnClassNames}\n              key={span}\n              to={this.props.getTimespanUrl(TIMESPAN[span])}\n            >\n              <FormattedMessage\n                id={`components.timespan.span.${TIMESPAN[span]}`}\n              />\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nimport { TIMESPAN } from '../../constants/timespan.constant';\n\nimport { ChartState } from '../../reducers/chart.reducer';\nimport { AppState } from '../../store/app.store';\n\nimport { ChartActions } from '../../actions/chart.actions';\n\nimport { AreaChartComponent } from '../../components/charts/area-chart/area-chart.component';\nimport { ChartActionsComponent } from '../../components/charts/chart-actions/chart-actions.component';\nimport { PieChartComponent } from '../../components/charts/pie-chart/pie-chart.component';\nimport { TimespanComponent } from '../../components/charts/timespan/timespan.component';\n\nimport { ArrowIcon } from '../../components/common/icons/common.icons';\n\nimport './chart.scss';\n\nclass Chart extends React.PureComponent<\n  RouteComponentProps<{\n    chartType: string;\n  }> &\n    ChartState &\n    ChartActions\n> {\n  params: any = {};\n\n  constructor(props: any) {\n    super(props);\n\n    this.getTimespanUrl = this.getTimespanUrl.bind(this);\n    this.getChartActionUrl = this.getChartActionUrl.bind(this);\n  }\n\n  componentDidMount(): void {\n    this.params = this.getParams();\n\n    this.props.getChart(this.props.match.params.chartType, this.params);\n  }\n\n  UNSAFE_componentWillReceiveProps(props: any): void {\n    const params = this.getParams();\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n\n      this.props.getChart(this.props.match.params.chartType, this.params);\n    }\n  }\n\n  render(): JSX.Element {\n    const { iframe, scale } = queryString.parse(this.props.location.search);\n\n    const chartClassNames = classnames({\n      'bi-chart': true,\n      'bi-chart--iframe': iframe,\n      'bi-chart--scale': scale === '1',\n      'g-flex-column': true,\n      'g-flex-column__item-fixed': true,\n    });\n\n    return (\n      <div className={chartClassNames}>\n        <FormattedMessage\n          id={`common.pages.chart.title.${this.props.match.params.chartType}`}\n        >\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-chart__header g-flex-column__item-fixed\">\n          <div className=\"bi-chart__line\">\n            <Link className=\"bi-chart__btn-back\" to=\"/charts\">\n              <ArrowIcon className=\"bi-chart__btn-back-icon\" />\n\n              <span className=\"bi-chart__btn-back-title\">\n                <FormattedMessage id=\"components.chart.back\" />\n              </span>\n            </Link>\n          </div>\n\n          <div className=\"bi-chart__title\">\n            <FormattedMessage\n              id={`components.chart.title.${this.props.match.params.chartType}`}\n            />\n          </div>\n          <div className=\"bi-chart__subtitle\">\n            <FormattedMessage\n              id={`components.chart.subtitle.${this.props.match.params.chartType}`}\n            />\n          </div>\n        </div>\n\n        {this.renderBody()}\n      </div>\n    );\n  }\n\n  private renderBody(): JSX.Element {\n    return (\n      <div className=\"bi-chart__body g-flex-column__item\">\n        <div className=\"bi-chart__chart\">\n          {this.props.data && this.renderChart()}\n        </div>\n\n        {this.renderControls()}\n      </div>\n    );\n  }\n\n  private renderChart(): JSX.Element {\n    const { iframe } = queryString.parse(this.props.location.search);\n\n    switch (this.props.match.params.chartType) {\n      case 'hash-rate-distribution': {\n        return (\n          <PieChartComponent\n            data={this.formatData()}\n            compact={!!iframe}\n            labels={{\n              name: (\n                <FormattedMessage\n                  id={'components.chart.hash-rate-distribution.labels.name'}\n                />\n              ),\n              value: (\n                <FormattedMessage\n                  id={'components.chart.hash-rate-distribution.labels.value'}\n                />\n              ),\n            }}\n          />\n        );\n      }\n\n      default: {\n        return (\n          <AreaChartComponent\n            data={this.formatData()}\n            compact={!!iframe}\n            isScale={this.params.scale}\n          />\n        );\n      }\n    }\n  }\n\n  private renderControls(): JSX.Element | null {\n    switch (this.props.match.params.chartType) {\n      case 'hash-rate-distribution': {\n        return null;\n      }\n\n      default: {\n        return (\n          <div className=\"bi-chart__controls g-flex\">\n            <TimespanComponent\n              selected={this.params.timespan}\n              getTimespanUrl={this.getTimespanUrl}\n            />\n\n            <ChartActionsComponent\n              isScale={this.params.scale}\n              data={this.props.data}\n              getChartActionUrl={this.getChartActionUrl}\n            />\n          </div>\n        );\n      }\n    }\n  }\n\n  private formatData(): any {\n    switch (this.props.match.params.chartType) {\n      case 'miners-revenue':\n      case 'total': {\n        return this.props.data.map((item: any) => {\n          return {\n            timestamp: item.timestamp,\n            type: 'coin',\n            value: item.value / 1e9,\n          };\n        });\n      }\n\n      case 'blockchain-size':\n      case 'block-size': {\n        return this.props.data.map((item: any) => {\n          return {\n            timestamp: item.timestamp,\n            type: 'bytes',\n            value: item.value,\n          };\n        });\n      }\n\n      case 'hash-rate': {\n        return this.props.data\n          .slice(0, this.props.data.length - 1)\n          .map((item: any) => {\n            return {\n              timestamp: item.timestamp,\n              type: 'hashRateDay',\n              value: item.value,\n            };\n          });\n      }\n\n      default: {\n        return this.props.data;\n      }\n    }\n  }\n\n  private getParams(): any {\n    const params = queryString.parse(this.props.history.location.search);\n\n    const validTimespan = Object.keys(TIMESPAN).find((key: string) => {\n      return TIMESPAN[key] === params.timespan;\n    });\n\n    return {\n      scale: params.scale === '1',\n      timespan: validTimespan ? TIMESPAN[validTimespan] : TIMESPAN.DAYS_30,\n    };\n  }\n\n  private getTimespanUrl(span: TIMESPAN): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.timespan = span;\n\n    return `${this.props.location.pathname}?${queryString.stringify(params)}`;\n  }\n\n  private getChartActionUrl(\n    param: string,\n    value: string | number | null\n  ): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params[param] = value;\n\n    if (value === null) {\n      delete params[param];\n    }\n\n    return `${this.props.location.pathname}?${queryString.stringify(params)}`;\n  }\n}\n\nfunction mapStateToProps(state: AppState): ChartState {\n  return state.chart;\n}\n\nfunction mapDispatchToProps(dispatch: any): any {\n  return bindActionCreators(ChartActions, dispatch);\n}\n\nexport const ChartComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Chart);\n\nexport default ChartComponent;\n"],"sourceRoot":""}