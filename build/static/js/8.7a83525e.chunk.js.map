{"version":3,"sources":["constants/struct.types.ts","components/common/coin-value/coin-value.component.tsx","components/common/timestamp/timestamp.component.tsx","utils/fetchStruct.ts","components/common/paginate-simple/paginate-simple.component.tsx","components/modals/address-issued-tokens-modal/address-issued-tokens-modal.component.tsx","components/common/dropdown-list/dropdown-list.component.tsx","components/transactions/transactions-item/transactions-item.component.tsx","components/transactions/transactions.component.tsx","services/address.api.service.ts","actions/address.actions.ts","components/modals/address-qrcode-modal/address-qrcode-modal.component.tsx","components/address/address-qrcode-action/address-qrcode-action.component.tsx","components/modals/payment-request-modal/payment-request-modal.component.tsx","components/address/address-request-payment-action/address-requets-payment-action.component.tsx","components/common/copy-text/copy-text.component.tsx","components/address/address-summary/address-summary.component.tsx","components/address/address-transactions/address-transactions.component.tsx","pages/address/address.component.tsx"],"names":["GET_ALL_ISSUED_TOKENS_STRUCT","GET_TOTAL_ISSUED_TOKENS_STRUCT","GET_ISSUED_TOKENS_BY_ID_STRUCT","GET_UNCONFIRMED_TRANSACTIONS_STRUCT","GET_UNCONFIRMED_TRANSACTION_STRUCT","GET_ORACLE_POOL_DATA_STRUCT","GET_ADDRESSES_BALANCES_STRUCT","CoinValueComponent","className","this","getFormattedValue","props","coinName","environment","blockchain","toUpperCase","formattedValue","value","toFixed","split","reduceRight","arr","i","length","push","reverse","join","toString","React","PureComponent","TimestampComponent","date","dayjs","timestamp","format","defaultOpts","transformResponse","d","dispatch","fetchStruct","structId","axiosParams","opts","startStructFetch","axios","request","then","res","data","result","stopStructFetch","Promise","resolve","error","errors","Error","reject","catch","PaginateSimpleComponent","pageCount","Math","ceil","total","limit","forcePage","disabled","to","getPageUrl","id","values","current","Component","AddressIssuedTokensModalComponent","title","overlayClassName","isOpen","onRequestClose","onClose","onClick","issuedTokens","map","token","name","tokenId","integerSeparator","decimals","amount","pow","random","DropdownListComponent","state","isDropdownShown","toggleDropdown","bind","list","button","dropdownClassNames","classnames","option","ind","label","setState","TransactionsItem","isClient","getAddressInputs","transaction","inputs","reduce","acc","address","getAddressOutputs","outputs","getTransactionState","assets","defaultAssets","substr","buttonText","totalOutput","totalInputAddress","totalOutputAddress","isOutput","creationTimestamp","index","isScriptsDisplayed","outputTransactionId","renderAssets","style","display","spentTransactionId","confirmations","one","other","abs","TransactionsItemComponent","connect","ownProps","settings","TransactionsComponent","transactions","numConfirmations","confirmationsCount","AddressApiService","apiUrl","get","apiUrlV1","response","params","offset","getUnconfirmed","unconfirmed","getConfirmed","confirmed","items","newLimit","method","url","AddressActions","getAddress","type","GET_ADDRESS","payload","GET_ADDRESS_SUCCESS","getAddressTransactions","GET_ADDRESS_TRANSACTIONS","GET_ADDRESS_TRANSACTIONS_SUCCESS","getAddressesBalances","AddressQrcodeModalComponent","closeTimeoutMS","size","QRCODE_MODAL_STATE_KEY","AddressQrcodeActionComponent","openModal","closeModal","addressId","stateKey","PaymentRequestModal","link","copied","description","setAmount","setDescription","copyLinkToClipboard","selectLink","getLink","onChange","min","ref","queryString","stringify","host","environments","window","location","origin","event","parseInt","target","getSelection","selectAllChildren","document","execCommand","removeAllRanges","setTimeout","PaymentRequestModalComponent","withRouter","PAYMENT_REQUEST_MODAL_STATE_KEY","AddressRequetsPaymentActionComponent","CopyTextComponent","copyToClipboard","cursor","color","alignItems","isNotShowIcon","height","marginLeft","children","textContent","getTextContent","textarea","createElement","body","appendChild","select","removeChild","AddressSummaryComponent","alert","useAlert","show","textTransform","AddressTransactionsComponent","summary","useState","isModalOpen","setIsModalOpen","nanoErgs","tokens","Address","getParams","preloaded","clearPreloadedState","currentAddress","match","nextProps","JSON","renderBody","fetching","transactionFetching","floor","page","parse","history","search","pathname","bindActionCreators","AppActions"],"mappings":"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","file":"static/js/8.7a83525e.chunk.js","sourcesContent":["export const SEARCH_TOKEN_BY_ID_STRUCT = 'assets/tokenid/issuingBox';\n\nexport const UNSPENT_SELL_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentSellOrders';\n\nexport const UNSPENT_BUY_ORDERS_BY_TOKEN_ID_STRUCT =\n  '/dex/tokens/tokenid/unspentBuyOrders';\n\nexport const GET_ALL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes';\n\nexport const GET_TOTAL_ISSUED_TOKENS_STRUCT = '/assets/issuingBoxes/total';\n\nexport const GET_ISSUED_TOKENS_BY_ID_STRUCT = 'assets/id:/issuingBoxes';\n\nexport const GET_UNCONFIRMED_TRANSACTIONS_STRUCT = '/transactions/unconfirmed';\n\nexport const GET_UNCONFIRMED_TRANSACTION_STRUCT =\n  '/transactions/unconfirmed/:id';\n\nexport const GET_ORACLE_POOL_DATA_STRUCT = 'oracle/frontendData';\n\nexport const GET_ADDRESSES_BALANCES_STRUCT = 'addresses/balances';\n","import React from 'react';\n\nimport environment from '../../../config/environment';\n\ninterface ICoinValueProps {\n  value: number;\n  coinName?: string;\n}\n\nexport class CoinValueComponent extends React.PureComponent<ICoinValueProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-coin-value  u-word-wrap u-word-wrap--ellipsis\">\n        {this.getFormattedValue()}{' '}\n        {this.props.coinName\n          ? this.props.coinName\n          : environment.blockchain.coinName.toUpperCase()}\n      </div>\n    );\n  }\n\n  private getFormattedValue(): string {\n    const { value } = this.props;\n\n    const formattedValue = value / 1e9;\n\n    if (formattedValue < 1 && formattedValue !== 0) {\n      return formattedValue\n        .toFixed(9)\n        .split('')\n        .reduceRight((arr: string[], i: string) => {\n          if (i === '0' && arr.length === 0) {\n            return arr;\n          }\n\n          arr.push(i);\n\n          return arr;\n        }, [])\n        .reverse()\n        .join('');\n    }\n\n    return formattedValue.toString();\n  }\n}\n","import dayjs from 'dayjs';\nimport React from 'react';\n\nimport './timestamp.scss';\n\nimport { Timestamp } from '../../../models/generated/timestamp';\n\ninterface ITimestampProps {\n  timestamp: Timestamp;\n}\n\nexport class TimestampComponent extends React.PureComponent<ITimestampProps> {\n  render(): JSX.Element {\n    const date = dayjs(this.props.timestamp);\n\n    return (\n      <div className=\"bi-timestamp u-word-wrap u-word-wrap--ellipsis\">\n        <span className=\"bi-timestamp__time\">{date.format('HH:mm:ss')}</span>\n        <span className=\"bi-timestamp__date\">{date.format('DD.MM.YYYY')}</span>\n      </div>\n    );\n  }\n}\n","import { Action, Dispatch } from 'redux';\nimport { stopStructFetch, startStructFetch } from 'redux-struct';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nexport interface Struct<T, E> {\n  data?: T;\n  isFetching: boolean;\n  errors?: E;\n}\n\nexport interface StructFlowOpts<T> {\n  transformResponse?(d: T): T | Promise<T>;\n  dispatch: Dispatch<Action>;\n}\n\nconst defaultOpts: StructFlowOpts<any> = {\n  transformResponse: (d) => d,\n  dispatch: (d) => d,\n};\n\nexport const fetchStruct = <T>(\n  structId: string,\n  axiosParams: AxiosRequestConfig,\n  opts: StructFlowOpts<T> = defaultOpts\n) => {\n  const { dispatch, transformResponse } = opts;\n  dispatch(startStructFetch(structId));\n\n  return axios\n    .request({ ...axiosParams })\n    .then((res: AxiosResponse<T>) => res.data)\n    .then(transformResponse)\n    .then((result: T) => {\n      if (!result) {\n        dispatch(stopStructFetch(structId, result));\n\n        return Promise.resolve(result);\n      }\n\n      const error = (result as any).errors || (result as any).error;\n\n      if (error) {\n        dispatch(stopStructFetch(structId, new Error(error)));\n\n        return Promise.reject(new Error(error));\n      }\n\n      dispatch(stopStructFetch(structId, result));\n\n      return Promise.resolve(result);\n    })\n    .catch((error: Error) => {\n      dispatch(stopStructFetch(structId, error));\n\n      return Promise.reject(error);\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './paginate-simple.scss';\n\nimport { ArrowIcon, DoubleArrowIcon } from '../icons/common.icons';\n\ninterface IPaginateSimpleProps {\n  total: number;\n  limit: number;\n  forcePage: number;\n  getPageUrl: (page: number) => string;\n}\n\nexport class PaginateSimpleComponent extends React.Component<IPaginateSimpleProps> {\n  constructor(props: IPaginateSimpleProps) {\n    super(props);\n  }\n\n  render(): JSX.Element | null {\n    const pageCount = Math.ceil(this.props.total / this.props.limit);\n\n    if (!pageCount) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-paginate-simple\">\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            to={this.props.getPageUrl(0)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage - 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        <span className=\"bi-paginate-simple__status\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page-of\"\n            values={{ current: this.props.forcePage + 1, total: pageCount }}\n          />\n        </span>\n\n        <span className=\"bi-paginate-simple__status bi-paginate-simple__status--mobile\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page\"\n            values={{ current: this.props.forcePage + 1 }}\n          />\n        </span>\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage + 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(pageCount - 1)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactModal from 'react-modal';\nimport format from 'format-number';\n\nimport { Asset } from '../../../models/generated/asset';\n\nimport { CrossIcon } from '../../common/icons/common.icons';\n\nimport './address-issued-tokens-modal.scss';\n\ninterface AddressIssuedTokensModalProps {\n  isOpen: boolean;\n  issuedTokens: Array<Asset> | undefined;\n  onClose: () => void;\n  title?: string;\n}\n\nexport class AddressIssuedTokensModalComponent extends React.PureComponent<AddressIssuedTokensModalProps> {\n  render(): JSX.Element {\n    const { title } = this.props;\n    return (\n      <ReactModal\n        className=\"bi-address-issued-tokens-modal bi-modal bi-modal--scale\"\n        overlayClassName=\"bi-modal-overlay\"\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.onClose}\n      >\n        <button className=\"bi-modal__btn-close\" onClick={this.props.onClose}>\n          <CrossIcon className=\"bi-modal__btn-close-icon\" />\n        </button>\n\n        <div className=\"bi-address-issued-tokens-modal__table-header\">\n          {title || 'Address tokens'}\n        </div>\n        <div className=\"bi-address-issued-tokens-modal__container\">\n          <div className=\"bi-address-issued-tokens-modal__table-body bi-table\">\n            {this.props.issuedTokens &&\n              this.props.issuedTokens.map((token: Asset, i: number) => {\n                return (\n                  <div\n                    key={`${Math.random()} - ${i}`}\n                    className=\"bi-address-issued-tokens-modal__row bi-table__row\"\n                  >\n                    <div className=\"bi-address-issued-tokens-modal__cell bi-table__cell bi-address-issued-tokens-modal__cell--token-id\">\n                      <FormattedMessage id={token.name || token.tokenId} />\n                    </div>\n\n                    <div className=\"bi-address-issued-tokens-modal__cell bi-table__cell bi-address-issued-tokens-modal__cell--amount\">\n                      {format({ integerSeparator: ' ' })(\n                        token.decimals > 0\n                          ? token.amount / Math.pow(10, token.decimals)\n                          : token.amount\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport React from 'react';\nimport { AddressIssuedTokensModalComponent } from 'src/components/modals/address-issued-tokens-modal/address-issued-tokens-modal.component';\n\nimport './dropdown-list.scss';\n\ninterface IDropdownProps {\n  list: any[];\n  button: string;\n}\n\ninterface IDropdownState {\n  isDropdownShown: boolean;\n}\n\nexport class DropdownListComponent extends React.PureComponent<\n  IDropdownProps,\n  IDropdownState\n> {\n  state: IDropdownState = {\n    isDropdownShown: false,\n  };\n\n  constructor(props: IDropdownProps) {\n    super(props);\n\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  render(): JSX.Element {\n    const { list, button } = this.props;\n\n    const dropdownClassNames = classnames({\n      'bi-dropdown-list': true,\n    });\n\n    return (\n      <div className={dropdownClassNames}>\n        <button\n          className=\"bi-dropdown-list__button g-flex bi-btn bi-btn--flat\"\n          onClick={this.toggleDropdown}\n        >\n          <span className=\"bi-dropdown-list__button-label\">{button}</span>\n        </button>\n\n        {this.state.isDropdownShown && (\n          <AddressIssuedTokensModalComponent\n            isOpen={this.state.isDropdownShown}\n            onClose={this.toggleDropdown}\n            title=\"Tokens\"\n            issuedTokens={list}\n          />\n        )}\n\n        <ul className=\"bi-dropdown-list__dropdown\">\n          {list.map((option: any, ind) => {\n            return (\n              <li\n                className=\"bi-dropdown-list__option\"\n                key={`${option.value}_${ind}_${option.label}`}\n              >\n                <span>{option.value}</span>&nbsp;{option.label}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  private toggleDropdown(): void {\n    this.setState({\n      isDropdownShown: !this.state.isDropdownShown,\n    });\n  }\n}\n","import React from 'react';\nimport { FormattedMessage, FormattedPlural } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { AddressId } from '../../../models/generated/addressId';\nimport { Transaction } from '../../../models/generated/transaction';\nimport { TransactionOutput } from '../../../models/generated/transactionOutput';\n\nimport { SettingsState } from '../../../reducers/settings.reducer';\nimport { AppState } from '../../../store/app.store';\n\nimport { CoinValueComponent } from '../../common/coin-value/coin-value.component';\nimport { TimestampComponent } from '../../common/timestamp/timestamp.component';\n\nimport { DropdownListComponent } from '../../common/dropdown-list/dropdown-list.component';\nimport { ArrowThickIcon } from '../../common/icons/common.icons';\nimport './transactions-item.scss';\n\ninterface IBlockTransactionsItemProps {\n  transaction: Transaction;\n  confirmations?: any;\n  address?: AddressId;\n  key?: string;\n}\n\nclass TransactionsItem extends React.Component<\n  IBlockTransactionsItemProps & SettingsState\n> {\n  state: any = {\n    isClient: false,\n  };\n\n  componentDidMount(): void {\n    this.setState({\n      isClient: true,\n    });\n  }\n\n  renderAssets(assets: TransactionOutput['assets'] = []): JSX.Element | null {\n    if (assets.length === 0) {\n      return null;\n    }\n\n    const defaultAssets = assets.map(({ amount, tokenId }) => ({\n      label: tokenId.substr(0, 4),\n      value: amount,\n    }));\n\n    const buttonText = `+${defaultAssets.length}`;\n\n    return (\n      <>\n        &nbsp;\n        <DropdownListComponent list={assets} button={buttonText} />\n      </>\n    );\n  }\n\n  getAddressInputs = () =>\n    this.props.transaction.inputs.reduce(\n      (acc, { address, value }) =>\n        address === this.props.address ? acc + value : acc,\n      0\n    );\n\n  getAddressOutputs = () =>\n    this.props.transaction.outputs.reduce(\n      (acc, { address, value }) =>\n        address === this.props.address ? acc + value : acc,\n      0\n    );\n\n  getTransactionState = () => {\n    const inputs = this.getAddressInputs();\n    const outputs = this.getAddressOutputs();\n\n    if (outputs !== 0 && outputs - inputs > 0) {\n      return 'input';\n    }\n\n    return 'output';\n  };\n\n  render(): JSX.Element {\n    let totalOutput = 0;\n    const totalInputAddress = this.getAddressInputs();\n    const totalOutputAddress = this.getAddressOutputs();\n    const isOutput = this.getTransactionState() === 'output';\n\n    return (\n      <div className=\"bi-transactions-item\">\n        <div className=\"bi-transactions-item__header g-flex\">\n          <Link\n            className=\"bi-transactions-item__title u-word-wrap g-flex__item-fixed\"\n            to={`/transactions/${this.props.transaction.id}`}\n          >\n            {this.props.transaction.id}\n          </Link>\n\n          <div className=\"bi-transactions-item__timestamp g-flex__item-fixed\">\n            <TimestampComponent\n              timestamp={\n                this.props.transaction.creationTimestamp ||\n                this.props.transaction.timestamp\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"bi-transactions-item__body g-flex\">\n          <div className=\"bi-transactions-item__inputs g-flex__item\">\n            {this.props.transaction.inputs.map((address, index) => {\n              return (\n                <div\n                  className=\"bi-transactions-item__input g-flex\"\n                  key={`${index}__${address.id}`}\n                >\n                  <div className=\"bi-transactions-item__address\">\n                    {address.address ? (\n                      <Link\n                        className=\"u-word-wrap u-word-wrap--ellipsis\"\n                        to={`/addresses/${address.address}`}\n                      >\n                        {address.address}\n                      </Link>\n                    ) : (\n                      <FormattedMessage id=\"components.transaction-item.null-address\" />\n                    )}\n                  </div>\n\n                  {this.props.isScriptsDisplayed &&\n                    address.outputTransactionId && (\n                      <div className=\"bi-transactions-item__address-output g-flex g-flex__item-fixed\">\n                        (<CoinValueComponent value={address.value} />\n                        {address.assets\n                          ? this.renderAssets(address.assets)\n                          : ''}\n                        &nbsp;-&nbsp;\n                        <Link\n                          to={`/transactions/${address.outputTransactionId}`}\n                        >\n                          <FormattedMessage id=\"components.transaction-item.address-output\" />\n                        </Link>\n                        )\n                      </div>\n                    )}\n                </div>\n              );\n            })}\n          </div>\n\n          {this.props.address ? (\n            <div\n              className={[\n                'bi-transactions-item__arrow',\n                isOutput\n                  ? 'bi-transactions-item__arrow--output'\n                  : 'bi-transactions-item__arrow--input',\n              ].join(' ')}\n            >\n              <ArrowThickIcon className=\"bi-transactions-item__arrow-icon\" />\n            </div>\n          ) : (\n            <div className=\"bi-transactions-item__arrow\">\n              <ArrowThickIcon className=\"bi-transactions-item__arrow-icon\" />\n            </div>\n          )}\n\n          <div className=\"bi-transactions-item__outputs g-flex__item g-flex-column\">\n            {this.props.transaction.outputs.map((address, index) => {\n              totalOutput += address.value;\n\n              return (\n                <div\n                  className=\"bi-transactions-item__output g-flex\"\n                  key={`${index}__${address.id}`}\n                >\n                  <div className=\"bi-transactions-item__address g-flex__item-fixed\">\n                    {address.address ? (\n                      <Link\n                        className=\"u-word-wrap u-word-wrap--ellipsis\"\n                        to={`/addresses/${address.address}`}\n                      >\n                        {address.address}\n                      </Link>\n                    ) : (\n                      <span className=\"u-word-wrap u-word-wrap--ellipsis\">\n                        <FormattedMessage id=\"components.transaction-item.null-address\" />\n                      </span>\n                    )}\n                  </div>\n\n                  <div\n                    className=\"bi-transactions-item__address-spent g-flex__item u-word-wrap u-word-wrap--ellipsis\"\n                    style={{\n                      display:\n                        this.props.isScriptsDisplayed || !this.state.isClient\n                          ? 'block'\n                          : 'none',\n                    }}\n                  >\n                    {address.spentTransactionId ? (\n                      <Link to={`/transactions/${address.spentTransactionId}`}>\n                        <FormattedMessage id=\"components.transaction-item.spent\" />\n                      </Link>\n                    ) : (\n                      <FormattedMessage id=\"components.transaction-item.unspent\" />\n                    )}\n                  </div>\n\n                  <div className=\"bi-transactions-item__value g-flex__item-fixed\">\n                    <CoinValueComponent value={address.value} />\n\n                    {this.renderAssets(address.assets)}\n                  </div>\n                </div>\n              );\n            })}\n\n            <div className=\"bi-transactions-item__footer g-flex-column__item-fixed g-flex\">\n              {this.props.confirmations > 0 && (\n                <div className=\"bi-transactions-item__confirmations g-flex__item-fixed\">\n                  {this.props.confirmations}{' '}\n                  <FormattedPlural\n                    value={this.props.confirmations}\n                    one={\n                      <FormattedMessage id=\"components.transaction-item.confirmation.one\" />\n                    }\n                    other={\n                      <FormattedMessage id=\"components.transaction-item.confirmation.other\" />\n                    }\n                  />\n                </div>\n              )}\n\n              {!this.props.confirmations && (\n                <div className=\"bi-transactions-item__confirmations g-flex__item-fixed item__confirmations--unconfirmed\">\n                  <FormattedMessage id=\"components.transaction-item.unconfirmed\" />\n                </div>\n              )}\n\n              <div\n                className={[\n                  'bi-transactions-item__total-value g-flex__item-fixed',\n                  this.props.address &&\n                    (isOutput\n                      ? 'bi-transactions-item__total-value--output'\n                      : 'bi-transactions-item__total-value--input'),\n                ].join(' ')}\n              >\n                <CoinValueComponent\n                  value={\n                    this.props.address\n                      ? Math.abs(totalOutputAddress - totalInputAddress)\n                      : totalOutput\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(\n  state: AppState,\n  ownProps: IBlockTransactionsItemProps\n): any {\n  return {\n    ...state.settings,\n    ...ownProps,\n  };\n}\n\nexport const TransactionsItemComponent =\n  connect(mapStateToProps)(TransactionsItem);\n","import React from 'react';\n\nimport { AddressId } from '../../models/generated/addressId';\nimport { Transaction } from '../../models/generated/transaction';\n\nimport { TransactionsItemComponent } from './transactions-item/transactions-item.component';\n\nimport './transactions.scss';\n\ninterface BlockTransactionProps {\n  transactions: Transaction[];\n  address?: AddressId;\n}\n\nexport class TransactionsComponent extends React.PureComponent<BlockTransactionProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-transactions\">\n        {this.props.transactions.map((transaction) => {\n          return (\n            <TransactionsItemComponent\n              key={transaction.id}\n              transaction={transaction}\n              address={this.props.address}\n              confirmations={\n                transaction.numConfirmations || transaction.confirmationsCount\n              }\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import { GET_ADDRESSES_BALANCES_STRUCT } from './../constants/struct.types';\nimport axios, { AxiosResponse } from 'axios';\n\nimport environment from '../config/environment';\nimport { fetchStruct } from 'src/utils/fetchStruct';\n\nexport class AddressApiService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}/addresses`;\n  }\n\n  static getAddress(id: string): any {\n    return axios\n      .get(`${environment.apiUrlV1}/addresses/${id}/balance/total`)\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrlV1}/addresses/${id}/balance/total.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static getConfirmed(id: string, params: any) {\n    return axios\n      .get(`${environment.apiUrlV1}/addresses/${id}/transactions`, {\n        params,\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrlV1}/addresses/${id}/transactions.`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static getUnconfirmed(id: string, params: any) {\n    return axios\n      .get(`${environment.apiUrlV1}/mempool/transactions/byAddress/${id}`, {\n        params,\n      })\n      .then((response: AxiosResponse) => {\n        if (!response) {\n          return Promise.reject(\n            `Address api service. Request: ${environment.apiUrlV1}/mempool/transactions/byAddress/${id}`\n          );\n        }\n\n        return response.data;\n      });\n  }\n\n  static async getAddressTransactions(id: string, params: any): Promise<any> {\n    const { offset, limit } = params;\n    const unconfirmed = await this.getUnconfirmed(id, { offset, limit });\n\n    if (unconfirmed.total === 0 || unconfirmed.total < offset) {\n      const confirmed = await this.getConfirmed(id, {\n        offset: offset - unconfirmed.total,\n        limit,\n      });\n\n      return {\n        items: confirmed.items,\n        total: unconfirmed.total + confirmed.total,\n      };\n    }\n\n    if (unconfirmed.items.length < limit) {\n      const newLimit = limit - unconfirmed.items.length;\n\n      const confirmed = await this.getConfirmed(id, {\n        offset: 0,\n        limit: newLimit,\n      });\n\n      return {\n        items: [...unconfirmed.items, ...confirmed.items],\n        total: unconfirmed.total + confirmed.total,\n      };\n    }\n\n    const confirmed = await this.getConfirmed(id, {\n      offset: 0,\n      limit: 1,\n    });\n\n    return {\n      items: [...unconfirmed.items],\n      total: unconfirmed.total + confirmed.total,\n    };\n  }\n\n  static getAddressesBalances(dispatch: any): any {\n    return fetchStruct(\n      GET_ADDRESSES_BALANCES_STRUCT,\n      {\n        method: 'get',\n        url: `${environment.apiUrl}/addresses/balances?limit=100`,\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n}\n","import { Action, ActionCreatorsMapObject, Dispatch } from 'redux';\n\nimport {\n  GET_ADDRESS,\n  GET_ADDRESS_SUCCESS,\n  GET_ADDRESS_TRANSACTIONS,\n  GET_ADDRESS_TRANSACTIONS_SUCCESS,\n} from '../constants/address.types';\nimport { AddressApiService } from '../services/address.api.service';\n\nexport interface AddressActions extends ActionCreatorsMapObject {\n  getAddress: (id: string) => any;\n  getAddressTransactions: (id: string, params: any) => any;\n  getAddressesBalances: () => (dispatch: Dispatch<Action>) => any;\n}\n\nexport const AddressActions: AddressActions = {\n  getAddress(id: string): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_ADDRESS,\n      });\n\n      AddressApiService.getAddress(id).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_ADDRESS_SUCCESS,\n        });\n      });\n    };\n  },\n\n  getAddressTransactions(id: string, params: any): any {\n    return (dispatch: Dispatch<Action>) => {\n      dispatch({\n        type: GET_ADDRESS_TRANSACTIONS,\n      });\n\n      AddressApiService.getAddressTransactions(id, params).then((data: any) => {\n        dispatch({\n          payload: {\n            data,\n          },\n          type: GET_ADDRESS_TRANSACTIONS_SUCCESS,\n        });\n      });\n    };\n  },\n\n  getAddressesBalances() {\n    return (dispatch: any) => AddressApiService.getAddressesBalances(dispatch);\n  },\n};\n","import QRCode from 'qrcode.react';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactModal from 'react-modal';\n\nimport { AddressId } from '../../../models/generated/addressId';\n\nimport { CrossIcon } from '../../common/icons/common.icons';\n\nimport './address-qrcode-modal.scss';\n\ninterface AddressQrcodeModalProps {\n  isOpen: boolean;\n  address: AddressId;\n  onClose: () => void;\n}\n\nexport class AddressQrcodeModalComponent extends React.PureComponent<AddressQrcodeModalProps> {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className=\"bi-address-qrcode-modal bi-modal bi-modal--scale\"\n        overlayClassName=\"bi-modal-overlay\"\n        closeTimeoutMS={150}\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.onClose}\n      >\n        <button className=\"bi-modal__btn-close\" onClick={this.props.onClose}>\n          <CrossIcon className=\"bi-modal__btn-close-icon\" />\n        </button>\n\n        <div className=\"bi-address-qrcode-modal__title\">\n          <FormattedMessage id=\"components.address-qr-code-modal.title\" />\n\n          <div className=\"bi-address-qrcode-modal__subtitle\">\n            <FormattedMessage id=\"components.address-qr-code-modal.subtitle\" />\n          </div>\n        </div>\n\n        <QRCode value={this.props.address} size={164} />\n      </ReactModal>\n    );\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { QRCodeIcon } from '../../common/icons/common.icons';\n\nimport { AddressQrcodeModalComponent } from '../../modals/address-qrcode-modal/address-qrcode-modal.component';\n\nimport '../address-actions/address-actions.scss';\n\ninterface AddressActionsState {\n  [key: string]: boolean;\n}\n\ninterface AddressActionsProps {\n  addressId: string;\n}\n\nexport const QRCODE_MODAL_STATE_KEY = 'isQrCodeModalOpened';\n\nexport class AddressQrcodeActionComponent extends React.Component<\n  AddressActionsProps,\n  AddressActionsState\n> {\n  state: AddressActionsState = {\n    [QRCODE_MODAL_STATE_KEY]: false,\n  };\n\n  constructor(props: AddressActionsProps) {\n    super(props);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address-actions g-flex\">\n        <div className=\"bi-address-actions__item g-flex__item-fixed\">\n          <button\n            className=\"bi-address-actions__btn bi-btn\"\n            onClick={this.openModal(QRCODE_MODAL_STATE_KEY)}\n          >\n            <FormattedMessage id=\"components.address-actions.qrcode\" />\n\n            <QRCodeIcon className=\"bi-address-actions__btn-icon\" />\n          </button>\n        </div>\n\n        <AddressQrcodeModalComponent\n          isOpen={this.state[QRCODE_MODAL_STATE_KEY]}\n          onClose={this.closeModal(QRCODE_MODAL_STATE_KEY)}\n          address={this.props.addressId}\n        />\n      </div>\n    );\n  }\n\n  private openModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: true,\n      });\n    };\n  }\n\n  private closeModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: false,\n      });\n    };\n  }\n}\n","import QRCode from 'qrcode.react';\nimport queryString from 'query-string';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactModal from 'react-modal';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport environment from '../../../config/environment';\n\nimport { AddressId } from '../../../models/generated/addressId';\n\nimport { CrossIcon } from '../../common/icons/common.icons';\n\nimport './payment-request-modal.scss';\n\ntype IPaymentRequestModalProps = RouteComponentProps<any> & {\n  isOpen: boolean;\n  onClose: () => void;\n  address: AddressId;\n};\n\ninterface IPaymentRequestState {\n  amount: number;\n  copied: boolean;\n  description: string;\n}\n\nclass PaymentRequestModal extends React.PureComponent<\n  IPaymentRequestModalProps,\n  IPaymentRequestState\n> {\n  link!: HTMLDivElement;\n\n  state: IPaymentRequestState = {\n    amount: 0,\n    copied: false,\n    description: '',\n  };\n\n  constructor(props: IPaymentRequestModalProps) {\n    super(props);\n\n    this.setAmount = this.setAmount.bind(this);\n    this.setDescription = this.setDescription.bind(this);\n    this.copyLinkToClipboard = this.copyLinkToClipboard.bind(this);\n    this.selectLink = this.selectLink.bind(this);\n  }\n\n  render(): JSX.Element {\n    const link = this.getLink();\n\n    return (\n      <ReactModal\n        className=\"bi-payment-request-modal bi-modal bi-modal--scale g-scroll-y\"\n        overlayClassName=\"bi-modal-overlay\"\n        closeTimeoutMS={150}\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.onClose}\n      >\n        <button className=\"bi-modal__btn-close\" onClick={this.props.onClose}>\n          <CrossIcon className=\"bi-modal__btn-close-icon\" />\n        </button>\n\n        <div className=\"bi-payment-request-modal__title\">\n          <FormattedMessage id=\"components.payment-request-modal.title\" />\n\n          <div className=\"bi-payment-request-modal__subtitle\">\n            <FormattedMessage id=\"components.payment-request-modal.subtitle\" />\n          </div>\n        </div>\n\n        <div className=\"bi-payment-request-modal__form\">\n          <label className=\"bi-payment-request-modal__form-item g-flex\">\n            <span className=\"bi-payment-request-modal__label g-flex__item-fixed\">\n              <FormattedMessage id=\"components.payment-request-modal.amount\" />\n            </span>\n\n            <div className=\"bi-payment-request-modal__input-wrapper g-flex__item\">\n              <input\n                className=\"bi-payment-request-modal__input\"\n                type=\"number\"\n                onChange={this.setAmount}\n                min={0}\n              />\n\n              <span className=\"bi-payment-request-modal__input-currency\">\n                {environment.blockchain.coinName.toUpperCase()}\n              </span>\n            </div>\n          </label>\n\n          <label className=\"bi-payment-request-modal__form-item g-flex\">\n            <span className=\"bi-payment-request-modal__label bi-payment-request-modal__label--line\">\n              <FormattedMessage id=\"components.payment-request-modal.description\" />\n            </span>\n\n            <div className=\"bi-payment-request-modal__input-wrapper g-flex__item\">\n              <textarea\n                className=\"bi-payment-request-modal__input bi-payment-request-modal__input--textarea\"\n                onChange={this.setDescription}\n              />\n            </div>\n          </label>\n        </div>\n\n        <div className=\"bi-payment-request-modal__result g-flex\">\n          <div className=\"g-flex__item-fixed bi-payment-request-modal__qrcode\">\n            <QRCode value={link} size={156} />\n          </div>\n\n          <div className=\"g-flex__item-fixed bi-payment-request-modal__link g-flex-column\">\n            <div className=\"bi-payment-request-modal__link-header g-flex-column__item-fixed\">\n              <FormattedMessage id=\"components.payment-request-modal.link\" />:\n            </div>\n\n            <div\n              className=\"bi-payment-request-modal__link-body u-word-wrap g-scroll-y g-flex-column__item\"\n              onClick={this.selectLink}\n              ref={(ref: HTMLDivElement) => (this.link = ref)}\n            >\n              {link}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bi-payment-request-modal__footer g-flex-column__item g-flex\">\n          <button\n            className=\"bi-payment-request-modal__btn-copy bi-btn bi-btn--flat\"\n            onClick={this.copyLinkToClipboard}\n          >\n            {this.state.copied ? (\n              <FormattedMessage id=\"components.payment-request-modal.copied\" />\n            ) : (\n              <FormattedMessage id=\"components.payment-request-modal.copy\" />\n            )}\n          </button>\n        </div>\n      </ReactModal>\n    );\n  }\n\n  private getLink(): string {\n    const params = queryString.stringify({\n      address: this.props.address,\n      amount: this.state.amount,\n      description: this.state.description,\n    });\n\n    const host = environment.environments\n      ? environment.environments[0].url\n      : window.location.origin;\n\n    return `${host}/payment-request?${params}`;\n  }\n\n  private setAmount(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.setState({\n      amount: parseInt(event.target.value, 10),\n    });\n  }\n\n  private setDescription(event: React.ChangeEvent<HTMLTextAreaElement>): void {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  private selectLink(): void {\n    (window.getSelection() as Selection).selectAllChildren(this.link);\n  }\n\n  private copyLinkToClipboard(): void {\n    this.selectLink();\n\n    document.execCommand('copy');\n    (window.getSelection() as Selection).removeAllRanges();\n\n    this.setState({\n      copied: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        copied: false,\n      });\n    }, 1000);\n  }\n}\n\nexport const PaymentRequestModalComponent = withRouter(PaymentRequestModal);\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { PaymentRequestModalComponent } from '../../modals/payment-request-modal/payment-request-modal.component';\n\nimport '../address-actions/address-actions.scss';\n\ninterface AddressActionsState {\n  [key: string]: boolean;\n}\n\ninterface AddressActionsProps {\n  addressId: string;\n}\n\nexport const PAYMENT_REQUEST_MODAL_STATE_KEY = 'isPaymentRequestModalOpened';\n\nexport class AddressRequetsPaymentActionComponent extends React.Component<\n  AddressActionsProps,\n  AddressActionsState\n> {\n  state: AddressActionsState = {\n    [PAYMENT_REQUEST_MODAL_STATE_KEY]: false,\n  };\n\n  constructor(props: AddressActionsProps) {\n    super(props);\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address-actions g-flex\">\n        <div className=\"bi-address-actions__item g-flex__item-fixed\">\n          <button\n            className=\"bi-address-actions__btn\"\n            onClick={this.openModal(PAYMENT_REQUEST_MODAL_STATE_KEY)}\n          >\n            <FormattedMessage id=\"components.address-actions.request-payment\" />\n          </button>\n        </div>\n\n        <PaymentRequestModalComponent\n          isOpen={this.state[PAYMENT_REQUEST_MODAL_STATE_KEY]}\n          onClose={this.closeModal(PAYMENT_REQUEST_MODAL_STATE_KEY)}\n          address={this.props.addressId}\n        />\n      </div>\n    );\n  }\n\n  private openModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: true,\n      });\n    };\n  }\n\n  private closeModal(stateKey: string): () => void {\n    return () => {\n      this.setState({\n        [stateKey]: false,\n      });\n    };\n  }\n}\n","import React from 'react';\nimport { CopyIcon } from '../icons/common.icons';\n\n// TODO: change the second type to FormattedMessage\ninterface ICopyTextProps {\n  children: string | any;\n  isNotShowIcon?: boolean;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport class CopyTextComponent extends React.Component<ICopyTextProps> {\n  constructor(props: ICopyTextProps) {\n    super(props);\n\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n  }\n\n  render() {\n    return (\n      <span\n        onClick={() => {\n          if (this.props.onClick) {\n            this.props.onClick();\n          }\n          this.copyToClipboard();\n        }}\n        style={{\n          cursor: 'pointer',\n          color: 'rgb(0, 120, 255)',\n          display: 'inline-flex',\n          alignItems: 'center',\n        }}\n        className={this.props.className}\n      >\n        {!this.props.isNotShowIcon && (\n          <div\n            style={{\n              height: '16px',\n            }}\n          >\n            <CopyIcon />\n          </div>\n        )}\n\n        <a\n          className=\"bi-copy-text\"\n          style={{ marginLeft: !this.props.isNotShowIcon ? '10px' : 0 }}\n        >\n          {this.props.children}\n        </a>\n      </span>\n    );\n  }\n\n  private getTextContent() {\n    if (typeof this.props.children === 'string') {\n      return this.props.children;\n    }\n\n    if (typeof this.props.children === 'object') {\n      return this.props.children.props.id;\n    }\n\n    return;\n  }\n\n  private copyToClipboard() {\n    const textContent = this.getTextContent();\n\n    if (!textContent) {\n      return;\n    }\n\n    const textarea = document.createElement('textarea');\n\n    textarea.value = textContent || '';\n    document.body.appendChild(textarea);\n    textarea.select();\n\n    document.execCommand('copy');\n    document.body.removeChild(textarea);\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CopyTextComponent } from '../../../components/common/copy-text/copy-text.component';\nimport { useAlert } from 'react-alert';\n\nimport './address-summary.scss';\n\ninterface IAddressSummaryProps {\n  addressId: string;\n}\n\nexport const AddressSummaryComponent = (props: IAddressSummaryProps) => {\n  const alert = useAlert();\n  return (\n    <div className=\"bi-address-summary\">\n      <div className=\"bi-address-summary__header\">\n        <FormattedMessage id=\"components.address-summary.title\" />\n      </div>\n\n      <div className=\"bi-address-summary__body bi-table\">\n        <div className=\"bi-address-summary__row bi-table__row\">\n          <div className=\"bi-address-summary__cell bi-address-summary__cell--header bi-table__cell\">\n            <FormattedMessage id=\"components.address-summary.hash\" />\n          </div>\n\n          <div className=\"bi-address-summary__cell bi-address-summary__cell--value bi-table__cell\">\n            <CopyTextComponent\n              onClick={() =>\n                alert.show(\n                  <span style={{ textTransform: 'initial' }}>Copied</span>\n                )\n              }\n              className=\"u-word-wrap u-word-wrap--ellipsis\"\n            >\n              {props.addressId}\n            </CopyTextComponent>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { FullAddressTransactions } from '../../../models/generated/fullAddressTransactions';\n\nimport './address-transactions.scss';\n\nimport { CoinValueComponent } from '../../common/coin-value/coin-value.component';\nimport { AddressIssuedTokensModalComponent } from 'src/components/modals/address-issued-tokens-modal/address-issued-tokens-modal.component';\n\ninterface AddressTransactionsProps {\n  summary: FullAddressTransactions;\n  total: number;\n}\n\nexport const AddressTransactionsComponent = ({\n  summary,\n  total,\n}: AddressTransactionsProps) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className=\"bi-address-transactions\">\n      <div className=\"bi-address-transactions__header\">\n        <FormattedMessage id=\"components.address-transactions.title\" />\n      </div>\n\n      <div className=\"bi-address-transactions__body bi-table\">\n        <div className=\"bi-address-transactions__row bi-table__row\">\n          <div className=\"bi-address-transactions__cell bi-address-transactions__cell--header bi-table__cell\">\n            <FormattedMessage id=\"components.address-transactions.confirmed\" />\n          </div>\n\n          <div className=\"bi-address-transactions__cell bi-table__cell\">\n            {total}\n          </div>\n        </div>\n\n        <div className=\"bi-address-transactions__row bi-table__row\">\n          <div className=\"bi-address-transactions__cell bi-address-transactions__cell--header bi-table__cell\">\n            <FormattedMessage id=\"components.address-transactions.confirmedBalance\" />\n          </div>\n\n          <div className=\"bi-address-transactions__cell bi-table__cell\">\n            <CoinValueComponent value={summary.confirmed.nanoErgs} />\n          </div>\n        </div>\n\n        <div className=\"bi-address-transactions__row bi-table__row\">\n          <div className=\"bi-address-transactions__cell bi-address-transactions__cell--header bi-table__cell\">\n            <FormattedMessage id=\"components.address-transactions.tokens\" />\n          </div>\n\n          <div className=\"bi-address-transactions__cell bi-table__cell\">\n            {!summary.confirmed.tokens?.length ? (\n              'None'\n            ) : (\n              <button\n                className=\"bi-address-actions__btn bi-btn\"\n                onClick={() => setIsModalOpen(true)}\n              >\n                <FormattedMessage id=\"components.address-transactions.show\" />\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {summary.confirmed.tokens?.length !== 0 && (\n        <div className=\"bi-address-issued-tokens__btn-container g-flex\">\n          <div className=\"bi-address-issued-tokens__item g-flex__item-fixed\"></div>\n\n          <AddressIssuedTokensModalComponent\n            isOpen={isModalOpen}\n            onClose={() => setIsModalOpen(false)}\n            issuedTokens={summary.confirmed.tokens}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\n\nimport environment from '../../config/environment';\n\nimport './address.scss';\n\nimport { AppActions } from '../../actions/app.actions';\nimport { AddressState } from '../../reducers/address.reducer';\nimport { AppState } from '../../store/app.store';\n\nimport { AddressActions } from '../../actions/address.actions';\n\nimport { AddressQrcodeActionComponent } from '../../components/address/address-qrcode-action/address-qrcode-action.component';\nimport { AddressRequetsPaymentActionComponent } from '../../components/address/address-request-payment-action/address-requets-payment-action.component';\nimport { AddressSummaryComponent } from '../../components/address/address-summary/address-summary.component';\nimport { AddressTransactionsComponent } from '../../components/address/address-transactions/address-transactions.component';\nimport { PaginateSimpleComponent } from '../../components/common/paginate-simple/paginate-simple.component';\nimport { TransactionsComponent } from '../../components/transactions/transactions.component';\n\nclass Address extends React.PureComponent<\n  RouteComponentProps<{ id: string }> &\n    AddressState &\n    AddressActions &\n    AppActions\n> {\n  params: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.params = this.getParams();\n\n    this.getPageUrl = this.getPageUrl.bind(this);\n  }\n\n  componentDidMount(): void {\n    const {\n      preloaded,\n      clearPreloadedState,\n      getAddress,\n      getAddressTransactions,\n      match,\n    } = this.props;\n\n    const currentAddress = match.params.id;\n\n    if (preloaded) {\n      clearPreloadedState();\n      return;\n    }\n\n    getAddress(currentAddress);\n    getAddressTransactions(currentAddress, this.params);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: any): void {\n    const params = this.getParams();\n\n    if (this.props.match.params.id !== nextProps.match.params.id) {\n      this.params = params;\n\n      this.props.getAddress(nextProps.match.params.id);\n      this.props.getAddressTransactions(nextProps.match.params.id, this.params);\n\n      return;\n    }\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n\n      this.props.getAddressTransactions(\n        this.props.match.params.id,\n        this.params\n      );\n    }\n  }\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-address g-flex-column__item-fixed\">\n        <div className=\"bi-address__header\">\n          <div className=\"bi-address__title\">\n            <FormattedMessage\n              id=\"components.address.title\"\n              values={{\n                coinName: environment.blockchain.coinName.toUpperCase(),\n              }}\n            />\n          </div>\n        </div>\n\n        {this.renderBody()}\n      </div>\n    );\n  }\n\n  private renderBody(): JSX.Element | null {\n    const { match, address, transactions } = this.props;\n\n    if (this.props.fetching) {\n      // TODO: Add nice loader\n      return <p className=\"bi-address__fetching-text\">Fetching data...</p>;\n    }\n\n    if (!address || this.props.fetching) {\n      // TODO: Add Alert message\n      return null;\n    }\n\n    return (\n      <div className=\"bi-address__body\">\n        <FormattedMessage\n          id=\"common.pages.address.title\"\n          values={{ id: match.params.id }}\n        >\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-address__tables g-flex\">\n          <div className=\"bi-address__table g-flex__item\">\n            <AddressSummaryComponent addressId={match.params.id} />\n            <AddressQrcodeActionComponent addressId={match.params.id} />\n          </div>\n\n          <div className=\"bi-address__table g-flex__item\">\n            <AddressTransactionsComponent\n              summary={address}\n              total={transactions?.total || 0}\n            />\n\n            <AddressRequetsPaymentActionComponent addressId={match.params.id} />\n          </div>\n        </div>\n\n        {transactions && (\n          <div className=\"bi-address__transactions\">\n            {!this.props.transactionFetching && (\n              <TransactionsComponent\n                transactions={transactions.items}\n                address={match.params.id}\n              />\n            )}\n\n            <div className=\"bi-address__transactions-footer g-flex\">\n              <PaginateSimpleComponent\n                total={transactions.total}\n                limit={this.params.limit}\n                getPageUrl={this.getPageUrl}\n                forcePage={Math.floor(this.params.offset / this.params.limit)}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private getPageUrl(page: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.offset = page * this.params.limit;\n\n    return `${this.props.location.pathname}?${queryString.stringify(params)}`;\n  }\n\n  private getParams(): any {\n    let { offset, limit }: any = queryString.parse(\n      this.props.history.location.search\n    );\n\n    offset = parseInt(offset, 10);\n    limit = parseInt(limit, 10) || 30;\n\n    return {\n      limit,\n      offset: offset || 0,\n    };\n  }\n}\n\nfunction mapStateToProps(state: AppState): AddressState {\n  return state.address;\n}\n\nfunction mapDispatchToProps(dispatch: any): any {\n  return bindActionCreators({ ...AddressActions, ...AppActions }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Address);\n"],"sourceRoot":""}