{"version":3,"sources":["components/common/paginate-simple/paginate-simple.component.tsx","components/common/limit-selector/limit-selector.component.tsx","services/issuedToken.api.service.ts","actions/issuedTokens.actions.ts","selectors/issuedTokens.ts","components/collapse-text/collapse-text.component.tsx","components/issued-tokens-table/issued-tokens-table.component.tsx","pages/issued-tokens/issued-tokens.component.tsx"],"names":["PaginateSimpleComponent","props","pageCount","Math","ceil","this","total","limit","className","forcePage","disabled","to","getPageUrl","id","values","current","React","Component","LimitSelectorComponent","label","items","map","item","index","selectorItemClassNames","classNames","selected","getLimitLink","PureComponent","IssuedTokensService","environment","apiUrl","dispatch","offset","fetchStruct","GET_ALL_ISSUED_TOKENS_STRUCT","method","url","params","searchQuery","query","GET_TOTAL_ISSUED_TOKENS_STRUCT","tokenId","GET_ISSUED_TOKENS_BY_ID_STRUCT","IssuedTokensActions","getTokens","trim","length","getAllIssuedTokens","then","data","payload","type","GET_TOKENS_SUCCESS","getSearchIssuedTokensByQuery","getAllIssuedTokensStructSelector","state","getStruct","CollapseText","children","lines","useState","isExpanded","setIsExpanded","isTruncated","setIsTruncated","toggler","href","onClick","e","preventDefault","ellipsis","onTruncate","IssuedTokensTableComponent","tokens","renderTable","colSpan","token","value","readOnly","name","format","integerSeparator","emissionAmount","decimals","description","IssuedTokens","updateTable","debounce","queryString","parse","history","location","search","push","stringify","onChangeInput","setState","searchInput","target","isFetching","floor","bind","getParams","reloadTokens","JSON","title","onChange","placeholder","page","Object","keys","forEach","key","parseInt","IssuedTokensComponent","connect","bindActionCreators"],"mappings":"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","file":"static/js/13.b86421ef.chunk.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\n\nimport './paginate-simple.scss';\n\nimport { ArrowIcon, DoubleArrowIcon } from '../icons/common.icons';\n\ninterface IPaginateSimpleProps {\n  total: number;\n  limit: number;\n  forcePage: number;\n  getPageUrl: (page: number) => string;\n}\n\nexport class PaginateSimpleComponent extends React.Component<IPaginateSimpleProps> {\n  constructor(props: IPaginateSimpleProps) {\n    super(props);\n  }\n\n  render(): JSX.Element | null {\n    const pageCount = Math.ceil(this.props.total / this.props.limit);\n\n    if (!pageCount) {\n      return null;\n    }\n\n    return (\n      <div className=\"bi-paginate-simple\">\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            to={this.props.getPageUrl(0)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === 0 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--prev bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage - 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        <span className=\"bi-paginate-simple__status\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page-of\"\n            values={{ current: this.props.forcePage + 1, total: pageCount }}\n          />\n        </span>\n\n        <span className=\"bi-paginate-simple__status bi-paginate-simple__status--mobile\">\n          <FormattedMessage\n            id=\"components.paginate-simple.page\"\n            values={{ current: this.props.forcePage + 1 }}\n          />\n        </span>\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(this.props.forcePage + 1)}\n          >\n            <ArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n\n        {this.props.forcePage === pageCount - 1 ? (\n          <button\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn bi-btn--flat\"\n            disabled={true}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </button>\n        ) : (\n          <Link\n            className=\"bi-paginate-simple__btn bi-paginate-simple__btn--next bi-btn--flat\"\n            to={this.props.getPageUrl(pageCount - 1)}\n          >\n            <DoubleArrowIcon className=\"bi-paginate-simple__btn-icon\" />\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './limit-selector.scss';\n\ninterface ILimitSelectorProps {\n  label: string | JSX.Element;\n  items: number[];\n  selected: number;\n  getLimitLink: (limit: number) => string;\n}\n\nexport class LimitSelectorComponent extends React.PureComponent<ILimitSelectorProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-limit-selector\">\n        <span className=\"bi-limit-selector__label\">{this.props.label}</span>\n\n        {this.props.items.map((item, index) => {\n          const selectorItemClassNames = classNames({\n            'bi-btn': true,\n            'bi-btn--flat': true,\n            'bi-limit-selector__item': true,\n            'bi-limit-selector__item--selected': item === this.props.selected,\n          });\n\n          return (\n            <Link\n              className={selectorItemClassNames}\n              key={index}\n              to={this.props.getLimitLink(item)}\n            >\n              {item}\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import environment from '../config/environment';\nimport { fetchStruct } from '../utils/fetchStruct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n  GET_ISSUED_TOKENS_BY_ID_STRUCT,\n} from '../constants/struct.types';\n\nexport class IssuedTokensService {\n  static get apiUrl(): string {\n    return `${environment.apiUrl}`;\n  }\n\n  static getAllIssuedTokens(dispatch: any, { limit, offset }: any): any {\n    return fetchStruct(\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `https://api.ergoplatform.com/api/v1/tokens`,\n        params: {\n          limit,\n          offset,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getSearchIssuedTokensByQuery(\n    dispatch: any,\n    { searchQuery, limit, offset }: any\n  ): any {\n    return fetchStruct(\n      GET_ALL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `https://api.ergoplatform.com/api/v1/tokens/search`,\n        params: {\n          limit,\n          offset,\n          query: searchQuery,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getTotalIssuedTokens(dispatch: any, { limit }: any): any {\n    return fetchStruct(\n      GET_TOTAL_ISSUED_TOKENS_STRUCT,\n      {\n        method: 'get',\n        url: `https://api.ergoplatform.com/api/v1/tokens`,\n        params: {\n          limit,\n        },\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n\n  static getIssuedTokensById(dispatch: any, tokenId: string): any {\n    return fetchStruct(\n      GET_ISSUED_TOKENS_BY_ID_STRUCT,\n      {\n        method: 'get',\n        url: `${IssuedTokensService.apiUrl}/tokens/${tokenId}/issuingBox`,\n      },\n      {\n        dispatch,\n      }\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\nimport { IssuedTokensService } from '../services/issuedToken.api.service';\nimport { GET_TOKENS_SUCCESS } from '../constants/tokens.types';\n\nexport interface IssuedTokensActions extends ActionCreatorsMapObject {\n  getTokens: (params: any) => any;\n}\n\nexport const IssuedTokensActions: IssuedTokensActions = {\n  getTokens(params: any) {\n    return (dispatch: any) => {\n      if (!params.searchQuery || params.searchQuery?.trim()?.length < 3) {\n        return IssuedTokensService.getAllIssuedTokens(dispatch, params).then(\n          (data: any) => {\n            dispatch({\n              payload: {\n                offset: params.offset || 0,\n              },\n              type: GET_TOKENS_SUCCESS,\n            });\n          }\n        );\n      }\n\n      return IssuedTokensService.getSearchIssuedTokensByQuery(\n        dispatch,\n        params\n      ).then((data: any) => {\n        dispatch({\n          payload: {\n            offset: params.offset || 0,\n          },\n          type: GET_TOKENS_SUCCESS,\n        });\n      });\n    };\n  },\n};\n","import { getStruct } from 'redux-struct';\nimport {\n  GET_ALL_ISSUED_TOKENS_STRUCT,\n  GET_TOTAL_ISSUED_TOKENS_STRUCT,\n} from '../constants/struct.types';\n\nexport const getAllIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_ALL_ISSUED_TOKENS_STRUCT)(state);\n\nexport const getTotalIssuedTokensStructSelector = (state: any) =>\n  getStruct(GET_TOTAL_ISSUED_TOKENS_STRUCT)(state);\n","import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ReactTruncate from 'react-truncate';\n\ninterface IProps {\n  children: React.ReactChildren;\n  lines: number;\n}\n\nexport const CollapseText = ({ children, lines }: IProps) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const toggler = (\n    <>\n      {!isExpanded && '...'}\n      <br />\n      <a\n        href=\"#!\"\n        onClick={(e: any) => {\n          e.preventDefault();\n          setIsExpanded(!isExpanded);\n        }}\n      >\n        <FormattedMessage\n          id={isExpanded ? 'common.token.showLess' : 'common.token.showMore'}\n        />\n      </a>\n    </>\n  );\n  return (\n    <>\n      <ReactTruncate\n        lines={!isExpanded && lines}\n        ellipsis={toggler}\n        onTruncate={setIsTruncated}\n      >\n        {children}\n      </ReactTruncate>\n      {!isTruncated && isExpanded && toggler}\n    </>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport format from 'format-number';\nimport { Link } from 'react-router-dom';\nimport { CollapseText } from 'src/components/collapse-text/collapse-text.component';\n\nimport './issued-tokens-table.scss';\n\ninterface IssuedTokensTableProps {\n  tokens: any[];\n  isFetching: boolean;\n}\n\nexport class IssuedTokensTableComponent extends React.Component<IssuedTokensTableProps> {\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-issued-tokens-table\">\n        {!this.props.tokens ? null : this.renderTable()}\n      </div>\n    );\n  }\n\n  private renderTable(): JSX.Element {\n    return (\n      <table className=\"bi-issued-tokens-table__body bi-table\">\n        <thead className=\"bi-issued-tokens-table-header\">\n          <tr className=\"bi-issued-tokens-table-header bi-issued-tokens-table__row bi-table__row\">\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={1}\n            >\n              <FormattedMessage id=\"common.token.id\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={2}\n            >\n              <FormattedMessage id=\"common.token.name\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={1}\n            >\n              <FormattedMessage id=\"common.token.amount\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={1}\n            >\n              <FormattedMessage id=\"common.token.decimals\" />\n            </th>\n\n            <th\n              className=\"bi-issued-tokens-table__cell bi-table__cell\"\n              colSpan={3}\n            >\n              <FormattedMessage id=\"common.token.description\" />\n            </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {this.props.tokens.map((token) => {\n            return (\n              <Link\n                to={`/token/${token.id}`}\n                className=\"bi-issued-tokens-table__row bi-table__row\"\n                key={token.id}\n              >\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.id\" />\n                  </div>\n\n                  <input\n                    className=\"bi-tokens-table__input\"\n                    type=\"text\"\n                    value={token.id}\n                    readOnly\n                  />\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={2}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.name\" />\n                  </div>\n\n                  {token.name}\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.amount\" />\n                  </div>\n\n                  <input\n                    className=\"bi-tokens-table__input\"\n                    type=\"text\"\n                    value={format({ integerSeparator: ' ' })(\n                      token.emissionAmount\n                    )}\n                    readOnly\n                  />\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={1}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.decimals\" />\n                  </div>\n\n                  {token.decimals}\n                </td>\n\n                <td\n                  className=\"bi-issued-tokens-table__cell bi-table__cell  bi-tokens-table__cell\"\n                  colSpan={3}\n                >\n                  <div className=\"bi-issued-tokens-table__cell-name bi-tokens-table__cell-name\">\n                    <FormattedMessage id=\"common.token.description\" />\n                  </div>\n\n                  <div>\n                    <CollapseText lines={2}>{token.description}</CollapseText>\n                  </div>\n                </td>\n              </Link>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import queryString from 'query-string';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { debounce } from 'lodash';\n\nimport { AppState } from '../../store/app.store';\n\nimport { IGetBlocksParams } from '../../services/block.api.service';\n\nimport { LimitSelectorComponent } from '../../components/common/limit-selector/limit-selector.component';\nimport { PaginateSimpleComponent } from '../../components/common/paginate-simple/paginate-simple.component';\nimport { IssuedTokensActions } from '../../actions/issuedTokens.actions';\nimport { getAllIssuedTokensStructSelector } from '../../selectors/issuedTokens';\nimport { IssuedTokensTableComponent } from '../../components/issued-tokens-table/issued-tokens-table.component';\n\nimport './issued-tokens.scss';\n\ntype IDataProps = AppState &\n  IssuedTokensActions &\n  RouteComponentProps<{}> & {\n    tokens: any;\n    offset: number;\n  };\n\nclass IssuedTokens extends React.PureComponent<IDataProps, any> {\n  params: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.getPageUrl = this.getPageUrl.bind(this);\n    this.getLimitLink = this.getLimitLink.bind(this);\n    const { searchQuery } = queryString.parse(\n      this.props.history.location.search\n    );\n\n    this.params = this.getParams();\n    this.state = {\n      searchInput: searchQuery || '',\n    };\n  }\n\n  componentDidMount(): void {\n    this.reloadTokens(this.params);\n  }\n\n  updateTable = debounce((value) => {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    this.props.history.push(\n      `/issued-tokens?${queryString.stringify({\n        searchQuery: value,\n        limit: params.limit,\n      })}`\n    );\n  }, 300);\n\n  onChangeInput = (e: any) => {\n    this.setState({ searchInput: e.target.value });\n\n    this.updateTable(e.target.value);\n  };\n\n  UNSAFE_componentWillReceiveProps(props: IDataProps): void {\n    const params = this.getParams();\n\n    if (JSON.stringify(params) !== JSON.stringify(this.params)) {\n      this.params = params;\n\n      this.reloadTokens(this.params);\n    }\n  }\n\n  renderTable = () => {\n    if (this.props.tokens.isFetching) {\n      return <p className=\"base-text\">Fetching Data...</p>;\n    }\n\n    if (this.props.tokens.data && this.props.tokens.data.total === 0) {\n      return (\n        <div className=\"bi-issued-tokens__body g-flex-column__item-fixed\">\n          <FormattedMessage id=\"components.data.wrong-query\" />\n        </div>\n      );\n    }\n\n    if (\n      !this.props.tokens.isFetching &&\n      this.props.tokens.data !== null &&\n      this.props.tokens.data.items.length > 0\n    ) {\n      return (\n        <>\n          <div className=\"bi-issued-tokens__body g-flex-column__item-fixed\">\n            <IssuedTokensTableComponent\n              tokens={this.props.tokens.data.items}\n              isFetching={this.props.tokens.isFetching}\n            />\n          </div>\n          <div className=\"bi-issued-tokens__footer g-flex-column__item-fixed g-flex\">\n            <div className=\"g-flex__item-fixed\">\n              <LimitSelectorComponent\n                items={[30, 60, 120]}\n                selected={this.params.limit}\n                label={<FormattedMessage id=\"components.data.show\" />}\n                getLimitLink={this.getLimitLink}\n              />\n            </div>\n\n            <div className=\"g-flex__item-fixed\">\n              <PaginateSimpleComponent\n                total={this.props.tokens.data.total}\n                limit={this.params.limit}\n                getPageUrl={this.getPageUrl}\n                forcePage={Math.floor(this.props.offset / this.params.limit)}\n              />\n            </div>\n          </div>\n        </>\n      );\n    }\n\n    return;\n  };\n\n  render(): JSX.Element {\n    return (\n      <div className=\"bi-issued-tokens g-flex-column g-flex-column__item-fixed\">\n        <FormattedMessage id=\"common.pages.issued-tokens.title\">\n          {(title) => (\n            <Helmet>\n              <title>{title}</title>\n            </Helmet>\n          )}\n        </FormattedMessage>\n\n        <div className=\"bi-issued-tokens__header g-flex-column__item-fixed g-flex\">\n          <div className=\"bi-issued-tokens__title\">\n            <FormattedMessage id=\"components.issued-tokens.title\" />\n          </div>\n\n          <div>\n            <input\n              className=\"bi-issued-tokens__input\"\n              type=\"string\"\n              onChange={this.onChangeInput}\n              value={this.state.searchInput}\n              placeholder=\"Search by ID or Number\"\n            />\n          </div>\n        </div>\n        {this.renderTable()}\n      </div>\n    );\n  }\n\n  private getPageUrl(page: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.offset = page * this.params.limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private getLimitLink(limit: number): string {\n    const params: any = queryString.parse(this.props.history.location.search);\n\n    params.limit = limit;\n\n    return `/issued-tokens?${queryString.stringify(params)}`;\n  }\n\n  private reloadTokens(params: IGetBlocksParams): void {\n    params = {\n      ...this.params,\n      ...params,\n      limit: params.limit || 30,\n      offset: params.offset || 0,\n      searchQuery: params.searchQuery,\n    };\n\n    Object.keys(params).forEach((key) => {\n      if (params[key] === null) {\n        delete params[key];\n      }\n    });\n\n    this.props.getTokens(params);\n\n    if (params.offset === 0) {\n      delete params.offset;\n    }\n\n    if (params.limit === 30) {\n      delete params.limit;\n    }\n\n    this.props.history.push(`/issued-tokens?${queryString.stringify(params)}`);\n  }\n\n  private getParams(): any {\n    let { offset, limit }: any = queryString.parse(\n      this.props.history.location.search\n    );\n\n    const { searchQuery } = queryString.parse(\n      this.props.history.location.search\n    );\n\n    offset = parseInt(offset, 10);\n    limit = parseInt(limit, 10) || 30;\n\n    return {\n      limit,\n      offset: offset || 0,\n      searchQuery,\n    };\n  }\n}\n\nconst mapStateToProps = (state: any): any => ({\n  tokens: getAllIssuedTokensStructSelector(state),\n  offset: state.tokens.offset,\n});\n\nconst mapDispatchToProps = (dispatch: any): any => {\n  return bindActionCreators({ ...IssuedTokensActions }, dispatch);\n};\n\nconst IssuedTokensComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IssuedTokens);\n\nexport default IssuedTokensComponent;\n"],"sourceRoot":""}